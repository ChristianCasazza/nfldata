{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "1.8.7", "generated_at": "2024-09-29T12:48:06.452580Z", "invocation_id": "ed31df0e-1403-4421-b058-0c1c739cd950", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-29T12:48:05.753065Z", "completed_at": "2024-09-29T12:48:05.833199Z"}, {"name": "execute", "started_at": "2024-09-29T12:48:05.868035Z", "completed_at": "2024-09-29T12:48:06.110366Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.38262939453125, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.nfl.distinct_teams", "compiled": true, "compiled_code": "SELECT DISTINCT posteam \nFROM \"nfl_database\".\"main\".\"nfl_pbp_2024\"", "relation_name": "\"nfl_database\".\"main\".\"distinct_teams\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-29T12:48:05.763754Z", "completed_at": "2024-09-29T12:48:05.773045Z"}, {"name": "execute", "started_at": "2024-09-29T12:48:05.845458Z", "completed_at": "2024-09-29T12:48:06.143065Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.4103705883026123, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.nfl.first_down", "compiled": true, "compiled_code": "WITH play_data AS (\n    SELECT \n        play_type,\n        yards_gained,\n        epa,\n        success,\n        CASE \n            WHEN yards_gained >= ydstogo THEN 1 \n            ELSE 0 \n        END AS first_down_achieved\n    FROM \"nfl_database\".\"main\".\"nfl_pbp_2024\"\n    WHERE down = 1\n    AND play_type NOT IN ('no_play', 'qb_kneel', 'qb_spike', 'field_goal')\n    AND posteam = 'MIA'\n)\nSELECT \n    play_type, \n    (COUNT(*) * 100.0 / SUM(COUNT(*)) OVER ()) AS play_percentage,\n    AVG(yards_gained) AS avg_yards_gained,\n    MEDIAN(yards_gained) AS median_yards_gained,\n    SUM(yards_gained) AS total_yards_gained,\n    AVG(epa) AS avg_epa,\n    MEDIAN(epa) AS median_epa,\n    SUM(epa) AS total_epa,\n    SUM(CASE WHEN epa > 0 THEN 1 ELSE 0 END) AS positive_epa_plays,\n    (SUM(CASE WHEN epa > 0 THEN 1 ELSE 0 END) * 100.0 / COUNT(*)) AS positive_epa_rate,\n    SUM(CASE WHEN success = 1 THEN 1 ELSE 0 END) AS successful_plays,\n    (SUM(CASE WHEN success = 1 THEN 1 ELSE 0 END) * 1.0 / COUNT(*)) AS success_rate,\n    SUM(first_down_achieved) AS first_down_achievements,\n    (SUM(first_down_achieved) * 100.0 / COUNT(*)) AS first_down_rate\nFROM play_data\nGROUP BY play_type", "relation_name": "\"nfl_database\".\"main\".\"first_down\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-29T12:48:05.774754Z", "completed_at": "2024-09-29T12:48:05.879654Z"}, {"name": "execute", "started_at": "2024-09-29T12:48:05.897169Z", "completed_at": "2024-09-29T12:48:06.155026Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.41135287284851074, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.nfl.firstdownpassing", "compiled": true, "compiled_code": "WITH pass_data AS (\n    SELECT \n        CONCAT(pass_length, ' - ', pass_location) AS pass_type,  \n        air_yards,\n        yards_after_catch,\n        shotgun,\n        epa,\n        yards_gained,\n        success,\n        CASE \n            WHEN yards_gained >= ydstogo THEN 1 \n            ELSE 0 \n        END AS first_down_achieved\n    FROM \"nfl_database\".\"main\".\"nfl_pbp_2024\"\n    WHERE down = 1\n    AND play_type = 'pass'\n    AND posteam = 'MIA'\n)\nSELECT \n    pass_type, \n    AVG(air_yards) AS avg_air_yards,\n    MEDIAN(air_yards) AS median_air_yards,\n    AVG(yards_after_catch) AS avg_yac,\n    MEDIAN(yards_after_catch) AS median_yac,\n    AVG(yards_gained) AS avg_yards_gained,\n    MEDIAN(yards_gained) AS median_yards_gained,\n    SUM(yards_gained) AS total_yards_gained,\n    AVG(epa) AS avg_epa,\n    MEDIAN(epa) AS median_epa,\n    SUM(CASE WHEN success = 1 THEN 1 ELSE 0 END) AS successful_passes,\n    (SUM(CASE WHEN success = 1 THEN 1 ELSE 0 END) * 1.0 / COUNT(*)) AS success_rate,\n    SUM(first_down_achieved) AS first_down_achievements,\n    (SUM(first_down_achieved) * 1.0 / COUNT(*)) AS first_down_rate,\n    SUM(CASE WHEN shotgun = 1 THEN 1 ELSE 0 END) AS shotgun_plays,\n    (SUM(CASE WHEN shotgun = 1 THEN 1 ELSE 0 END) * 1.0 / COUNT(*)) AS shotgun_rate\nFROM pass_data\nGROUP BY pass_type", "relation_name": "\"nfl_database\".\"main\".\"firstdownpassing\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-29T12:48:05.840354Z", "completed_at": "2024-09-29T12:48:05.895195Z"}, {"name": "execute", "started_at": "2024-09-29T12:48:05.903480Z", "completed_at": "2024-09-29T12:48:06.167452Z"}], "thread_id": "Thread-5 (worker)", "execution_time": 0.4149153232574463, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.nfl.penalty_totals", "compiled": true, "compiled_code": "SELECT \n    week,\n    penalty_type,\n    COUNT(*) AS total_penalties\nFROM \"nfl_database\".\"main\".\"nfl_pbp_2024\"\nWHERE penalty_type IS NOT NULL\nGROUP BY \n    week,\n    penalty_type\nORDER BY \n    week ASC", "relation_name": "\"nfl_database\".\"main\".\"penalty_totals\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-29T12:48:05.837662Z", "completed_at": "2024-09-29T12:48:05.896512Z"}, {"name": "execute", "started_at": "2024-09-29T12:48:05.907080Z", "completed_at": "2024-09-29T12:48:06.173286Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.42794108390808105, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.nfl.penalties_per_team", "compiled": true, "compiled_code": "SELECT\n    penalty_team, \n    week,\n    penalty_type,\n    COUNT(*) AS total_penalties\nFROM \"nfl_database\".\"main\".\"nfl_pbp_2024\"\nWHERE penalty_type IS NOT NULL\nGROUP BY \n    week,\n    penalty_type,\n    penalty_team\nORDER BY \n    week ASC", "relation_name": "\"nfl_database\".\"main\".\"penalties_per_team\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-29T12:48:05.851188Z", "completed_at": "2024-09-29T12:48:05.901363Z"}, {"name": "execute", "started_at": "2024-09-29T12:48:05.916231Z", "completed_at": "2024-09-29T12:48:06.175433Z"}], "thread_id": "Thread-7 (worker)", "execution_time": 0.41301536560058594, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.nfl.rushing", "compiled": true, "compiled_code": "SELECT\n    posteam AS Team,  \n    rusher_display_name AS Rusher_Name,  \n    rusher_position AS Rusher_Position,  \n\n    COUNT(*) AS Rush_Attempts,  \n    SUM(yards_gained) AS Total_Rushing_Yards,  \n    SUM(CASE WHEN yards_gained >= 10 THEN 1 ELSE 0 END) AS Explosive_Rushes,  \n    SUM(CASE WHEN first_down_rush = 1 THEN 1 ELSE 0 END) AS Total_First_Downs,  \n    SUM(CASE WHEN touchdown = 1 THEN 1 ELSE 0 END) AS Rushing_Touchdowns,  \n    \n    SUM(CASE WHEN third_down_converted = 1 THEN 1 ELSE 0 END) AS Third_Down_Conversions,  \n    SUM(CASE WHEN fourth_down_converted = 1 THEN 1 ELSE 0 END) AS Fourth_Down_Conversions,  \n    (SUM(CASE WHEN third_down_converted = 1 THEN 1 ELSE 0 END) + SUM(CASE WHEN fourth_down_converted = 1 THEN 1 ELSE 0 END)) AS Total_Conversions,  \n    \n    (SUM(CASE WHEN down = 3 AND first_down_rush = 1 THEN 1 ELSE 0 END) * 100.0 / NULLIF(SUM(CASE WHEN down = 3 THEN 1 ELSE 0 END), 0)) AS Third_Down_Success_Rate,  \n    (SUM(CASE WHEN down = 4 AND first_down_rush = 1 THEN 1 ELSE 0 END) * 100.0 / NULLIF(SUM(CASE WHEN down = 4 THEN 1 ELSE 0 END), 0)) AS Fourth_Down_Success_Rate,  \n    (SUM(CASE WHEN down IN (3, 4) AND first_down_rush = 1 THEN 1 ELSE 0 END) * 100.0 / NULLIF(SUM(CASE WHEN down IN (3, 4) THEN 1 ELSE 0 END), 0)) AS Both_Down_Success_Rate,  \n\n    SUM(epa) AS Total_EPA  \nFROM \"nfl_database\".\"main\".\"nfl_pbp_2024\"\nWHERE play_type = 'run'\nAND rusher_display_name IS NOT NULL  \nAND rusher_position IN ('RB', 'WR')  \nGROUP BY posteam, rusher_display_name, rusher_position  \nORDER BY Total_EPA DESC", "relation_name": "\"nfl_database\".\"main\".\"rushing\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-29T12:48:05.842865Z", "completed_at": "2024-09-29T12:48:05.900816Z"}, {"name": "execute", "started_at": "2024-09-29T12:48:05.911180Z", "completed_at": "2024-09-29T12:48:06.176841Z"}], "thread_id": "Thread-6 (worker)", "execution_time": 0.41544437408447266, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.nfl.receiver_stats_per_team", "compiled": true, "compiled_code": "SELECT\n    posteam AS Team,  \n    receiver_display_name AS Receiver_Name,  \n    COUNT(*) AS Targets,  \n    SUM(CASE WHEN complete_pass = 1 THEN 1 ELSE 0 END) AS Total_Catches,  \n    SUM(yards_gained) AS Total_Yards,  \n    SUM(air_yards) AS Total_Air_Yards,  \n    SUM(CASE WHEN air_yards > 0 THEN air_yards ELSE 0 END) AS Adj_Air_Yards,  \n    SUM(yards_after_catch) AS Total_YAC,  \n    SUM(CASE WHEN touchdown = 1 THEN 1 ELSE 0 END) AS Total_Touchdowns,  \n    SUM(CASE WHEN interception = 1 THEN 1 ELSE 0 END) AS Targeted_Interceptions,  \n    (SUM(yards_after_catch) * 100.0 / NULLIF(SUM(yards_gained), 0)) AS YAC_Percentage,  \n    \n    SUM(CASE WHEN first_down_pass = 1 THEN 1 ELSE 0 END) AS Total_First_Down_Passes,  \n    SUM(CASE WHEN third_down_converted = 1 THEN 1 ELSE 0 END) AS Third_Down_Conversions,  \n    SUM(CASE WHEN fourth_down_converted = 1 THEN 1 ELSE 0 END) AS Fourth_Down_Conversions,  \n    (SUM(CASE WHEN third_down_converted = 1 THEN 1 ELSE 0 END) + SUM(CASE WHEN fourth_down_converted = 1 THEN 1 ELSE 0 END)) AS Total_Conversions,  \n    \n    (SUM(CASE WHEN down = 3 AND first_down_pass = 1 THEN 1 ELSE 0 END) * 100.0 / NULLIF(SUM(CASE WHEN down = 3 THEN 1 ELSE 0 END), 0)) AS Third_Down_Success_Rate,  \n    (SUM(CASE WHEN down = 4 AND first_down_pass = 1 THEN 1 ELSE 0 END) * 100.0 / NULLIF(SUM(CASE WHEN down = 4 THEN 1 ELSE 0 END), 0)) AS Fourth_Down_Success_Rate,  \n    (SUM(CASE WHEN down IN (3, 4) AND first_down_pass = 1 THEN 1 ELSE 0 END) * 100.0 / NULLIF(SUM(CASE WHEN down IN (3, 4) THEN 1 ELSE 0 END), 0)) AS Both_Down_Success_Rate,  \n    \n    SUM(epa) AS Total_EPA  \nFROM \"nfl_database\".\"main\".\"nfl_pbp_2024\"\nWHERE play_type = 'pass'\nAND receiver_display_name IS NOT NULL  \nGROUP BY posteam, receiver_display_name\nORDER BY Total_EPA DESC", "relation_name": "\"nfl_database\".\"main\".\"receiver_stats_per_team\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-29T12:48:05.887133Z", "completed_at": "2024-09-29T12:48:05.902738Z"}, {"name": "execute", "started_at": "2024-09-29T12:48:05.920226Z", "completed_at": "2024-09-29T12:48:06.193982Z"}], "thread_id": "Thread-8 (worker)", "execution_time": 0.49184250831604004, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.nfl.team_breakdown", "compiled": true, "compiled_code": "WITH play_data AS (\n    SELECT \n        posteam,  \n        CASE \n            WHEN play_type_nfl = 'SACK' THEN 'Sack'\n            WHEN play_type_nfl = 'INTERCEPTION' THEN 'Interception'\n            WHEN play_type = 'run' AND qb_scramble = 1 THEN 'QB Scramble'\n            WHEN play_type = 'pass' THEN 'Pass'\n            ELSE 'Rush'\n        END AS play_type_category,  \n        yards_gained,\n        epa,\n        success,\n        penalty,\n        CASE \n            WHEN yards_gained >= ydstogo THEN 1 \n            ELSE 0 \n        END AS first_down_achieved\n    FROM \"nfl_database\".\"main\".\"nfl_pbp_2024\"\n    WHERE play_type NOT IN ('no_play', 'qb_kneel', 'qb_spike', 'field_goal')\n    AND penalty = 0  \n)\nSELECT \n    posteam,  \n    play_type_category, \n    COUNT(*) AS total_plays,  \n    (COUNT(*) * 100.0 / SUM(COUNT(*)) OVER (PARTITION BY posteam)) AS play_percentage,\n    AVG(yards_gained) AS avg_yards_gained,\n    MEDIAN(yards_gained) AS median_yards_gained,\n    SUM(yards_gained) AS total_yards_gained,\n    AVG(epa) AS avg_epa,\n    MEDIAN(epa) AS median_epa,\n    SUM(epa) AS total_epa,\n    SUM(CASE WHEN epa > 0 THEN 1 ELSE 0 END) AS positive_epa_plays,\n    (SUM(CASE WHEN epa > 0 THEN 1 ELSE 0 END) * 100.0 / COUNT(*)) AS positive_epa_rate,\n    SUM(CASE WHEN success = 1 THEN 1 ELSE 0 END) AS successful_plays,\n    (SUM(CASE WHEN success = 1 THEN 1 ELSE 0 END) * 1.0 / COUNT(*)) AS success_rate,\n    SUM(first_down_achieved) AS first_down_achievements,\n    (SUM(first_down_achieved) * 100.0 / COUNT(*)) AS first_down_rate\nFROM play_data\nGROUP BY posteam, play_type_category", "relation_name": "\"nfl_database\".\"main\".\"team_breakdown\""}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-09-29T12:48:06.270126Z", "completed_at": "2024-09-29T12:48:06.298650Z"}, {"name": "execute", "started_at": "2024-09-29T12:48:06.316776Z", "completed_at": "2024-09-29T12:48:06.375776Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.12363290786743164, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.nfl.not_null_penalty_totals_total_penalties.eeddb05695", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect total_penalties\nfrom \"nfl_database\".\"main\".\"penalty_totals\"\nwhere total_penalties is null\n\n\n", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-09-29T12:48:06.283714Z", "completed_at": "2024-09-29T12:48:06.297837Z"}, {"name": "execute", "started_at": "2024-09-29T12:48:06.304784Z", "completed_at": "2024-09-29T12:48:06.390770Z"}], "thread_id": "Thread-10 (worker)", "execution_time": 0.14130949974060059, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.nfl.not_null_penalty_totals_week.c7d2442de1", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect week\nfrom \"nfl_database\".\"main\".\"penalty_totals\"\nwhere week is null\n\n\n", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-09-29T12:48:06.287728Z", "completed_at": "2024-09-29T12:48:06.310283Z"}, {"name": "execute", "started_at": "2024-09-29T12:48:06.329038Z", "completed_at": "2024-09-29T12:48:06.394876Z"}], "thread_id": "Thread-12 (worker)", "execution_time": 0.14192605018615723, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.nfl.not_null_penalties_per_team_penalty_team.80c7ff4326", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect penalty_team\nfrom \"nfl_database\".\"main\".\"penalties_per_team\"\nwhere penalty_team is null\n\n\n", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-09-29T12:48:06.292311Z", "completed_at": "2024-09-29T12:48:06.327236Z"}, {"name": "execute", "started_at": "2024-09-29T12:48:06.334163Z", "completed_at": "2024-09-29T12:48:06.411012Z"}], "thread_id": "Thread-13 (worker)", "execution_time": 0.15031075477600098, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.nfl.not_null_penalties_per_team_total_penalties.12ed143e4f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect total_penalties\nfrom \"nfl_database\".\"main\".\"penalties_per_team\"\nwhere total_penalties is null\n\n\n", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-09-29T12:48:06.299351Z", "completed_at": "2024-09-29T12:48:06.328084Z"}, {"name": "execute", "started_at": "2024-09-29T12:48:06.338318Z", "completed_at": "2024-09-29T12:48:06.419998Z"}], "thread_id": "Thread-14 (worker)", "execution_time": 0.14846324920654297, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.nfl.not_null_penalties_per_team_week.4f8a147e5f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect week\nfrom \"nfl_database\".\"main\".\"penalties_per_team\"\nwhere week is null\n\n\n", "relation_name": null}], "elapsed_time": 0.8721890449523926, "args": {"log_level_file": "debug", "which": "build", "invocation_command": "dbt build --select fqn:*", "warn_error_options": {"include": [], "exclude": []}, "populate_cache": true, "favor_state": false, "write_json": true, "resource_types": [], "vars": {}, "macro_debugging": false, "use_colors_file": true, "strict_mode": false, "log_format": "json", "include_saved_query": false, "log_format_file": "json", "log_level": "info", "partial_parse": true, "show": false, "exclude": [], "partial_parse_file_diff": true, "project_dir": "/home/christianocean/mta/nfl/transformations/dbt", "exclude_resource_types": [], "send_anonymous_usage_stats": false, "target_path": "target/dbt_project_assets-474a3f6-c1128f2", "cache_selected_only": false, "version_check": true, "require_resource_names_without_spaces": false, "select": ["fqn:*"], "export_saved_queries": false, "log_path": "/home/christianocean/mta/nfl/transformations/dbt/target/dbt_project_assets-474a3f6-c1128f2", "source_freshness_run_project_hooks": false, "require_explicit_package_overrides_for_builtin_materializations": true, "indirect_selection": "eager", "log_file_max_bytes": 10485760, "show_resource_report": false, "profiles_dir": "/home/christianocean/mta/nfl/transformations/dbt", "introspect": true, "static_parser": true, "use_colors": true, "printer_width": 80, "defer": false, "print": true, "empty": false, "enable_legacy_logger": false, "quiet": false}}